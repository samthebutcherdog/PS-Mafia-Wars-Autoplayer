  MWAP Table of Contents
  * Global Functions
   * SCRIPT
   * GMSTORAGE_PATH
   * GM_ApiBrowserCheck()
   * checkInPublishPopup()
   * fetchPubOptions()
   * managePopups()
   * checkLoadIframe()
  * Global objects
   // Constructor for Spend objects.
   * Spend(name, spendFlag, startFlag, keepMode, keepValue,
               useMode, useValue, icon, burnFlag, lastFloor, lastCeiling)
     .prototype.refreshLimits = function (maxVal, canLevel)
     .prototype.toggleSpending = function (maxVal, curVal)
   // Constructor for Player objects.
   * Player(name)
     .prototype.match = function(player)
     .prototype.update = function(player)
   // Constructor for PlayerList objects.
   * PlayerList(name)
     .prototype.get = function(forceRefresh)
     .prototype.set = function(list)
     .prototype.add = function(player, max)
     .prototype.remove = function(player)
     .prototype.indexOf = function(player)
     .prototype.debug = function()
  * Icons
   * searchIcon
   * lootbagIcon
   * playIcon
   * infoIcon
   * attackIcon
   * defenseIcon
   * closeButtonIcon
   * updateGoodIcon
   * pausedMessageImage
   * experienceIcon
   * omgIcon
   * pauseIcon
   * staminaIcon
   * updateBadIcon
   * processIcon
   * energyPackIcon
   * energyIcon
   * killedMobsterIcon
   * yeahIcon
   * plussignIcon
   * cashIcon
   * cashCubaIcon
   * cashMoscowIcon
   * cashBangkokIcon
   * cashVegasIcon
   * healthIcon
   * healOnIcon
   * healOnHoldIcon
   * healOffIcon
   * warningIcon
   * chickenIcon
   * hideIcon
   * bgTabImage
   * checkedIcon
   * unCheckedIcon
  * Global Variables
  * tabURI?
  * More Functions
    * synchSettings()
    * sendSettings()
  * Animate Object
    // Constructor
    * Animate()
     * .prototype.clearTimeout = function()
     * .prototype.setTimeout = function(fx, delay)
     * .prototype.start = function()
  * End Globals
  
  * Auto Play
   * doAutoPlay ()  // Main loop, contains checks and calls other functions
   
  * sub functions
   * canautoheal()
   * getAutoPlayDelay()
   * autoReload(forceReload)
   * autoAccept()
   * autoHeal()
   * AskforHelp(hlpCity)
   * buildItem(itemArray, itemIndex, buildType)
   * checkVaultStatus(byUser)
   * autoCollectTake(takeCity)
   * autoPlayerUpdates()
   * miniPack()
   * miniPackForce()
   * autoStat()
   * autoEnforce()
   * calcJobratio(job)
   * canSalvageEnergy(job)
   * canMission()
   * autoMission()
   * currentJobTab()
   * currentJobTabPath()
   * onJobTab(tabno)
   * onJobTabpath(tabnopath)
   * canForceHeal()
   * canSpendStamina(minHealth)
   * autoHitlist()
   * autoFight(how)
   * setNextFightCity()
   * staminaBurst (burstMode, clickElt)
   * autoRob()
   * onRobbingTab()
   * goRobbingTab()
   * needToRefresh()
   * refreshRobbingGrid()
   * sleepRob(ms)
   * doRob()
   * getCurRobSlotId()
   * logRobResponse(rootElt, resultElt, context)
   * updateRobStatistics(success, exp)
   * autoHitman()
   * getStaminaMode()
   * autoBankDeposit(bankCity, amount)
   * autoBankWithdraw(bankCity, amount)
   * getHitlist(element, forceRefresh)
   * getDisplayedOpponents(element, forceRefresh)
   * findFightOpponent(element)
   * setFightOpponentActive(player)
   * setFightOpponentInactive(player)
   * setFightOpponentAvoid(player)
   * setHitmanOpponentAvoid(opponent) 
   * toggleSettings()
   * toggleStats()
   * showSettingsBox()
   * showMafiaLogBox()
   * showStatsWindow()
   * hideMafiaLogBox()
   * hideStatsWindow()
   * handleVersionChange()
   * saveDefaultSettings()
   * saveSettings()
   * updateMastheadMenu()
   * pause()
   * unPause()
   * mwapOnOffMenu()
   * mwapOnOff()
   * isFamily(username, how)
   * isLoggable(line)
   * addToLog(icon, line)
   * updateLogStats(newHow)
   * logFilterOnOff()
   * debugOnOff()
   * DEBUG(line, level)
   * cyclePropertyList()
   * refreshLog()
   * clearLog()
   * clearStats()
   * clearHitStats ()
   * showPrimaryStats() 
   * showPassiveStats() 
   * createLogBox()
   * getDollarsUnit(amount)
   * createSettingsBox()
   * createDynamicDrive()
   * createGeneralTab() 
   * createDisplayTab()
   * createMafiaTab()
   * createAutostatTab()
   * createEnergyTab()
   * tabContainerDivs(subTab)
   * removeStrongerOpponents(staminaTabSub)
   * staminaBursting(staminaTabSub)
   * createStaminaSubTab_FightRandom(staminaTabSub)
   * createStaminaSubTab_FightSpecific(staminaTabSub)
   * createStaminaSubTab_FightRob(staminaTabSub)
   * createStaminaSubTab_Rob(staminaTabSub)
   * createStaminaSubTab_CollectBounties(staminaTabSub)
   * createStaminaSubTab_SetBounties(staminaTabSub)
   * createStaminaSubTab_Random(staminaTabSub)
   * createStaminaTab()
   * createHealTab()
   * createCashTab ()
   * createAboutTab()
   * grabUpdateInfo()
   * validateStaminaTab()
   * createStatWindow()
   * clickAutoPause()
   * clickUseFightNames()
   * clickUseHitmanNames()
   * handleUnexpectedPage()
   * handleModificationTimer()
   * objLootItem() // object
   * clearLootPage()
   * restoreLootPage()
   * cleanLoot(sortLootType)
   * insertAfter( referenceNode, newNode )
   * sortAttack(colLoot)
   * sortDefense(colLoot)
   * removeCollection(eltCollection)
   * setModificationTimer()
   * handleDOMSubtreeModified(e)
   * handleContentModified(e)
   * handlePublishing()
   * setListenContent(on)
   * setListenStats(on)
   * statsInserted(e)
   * innerPageChanged(justPlay)
   * closePopUp()
   * refreshGlobalStats()
   * refreshSettings()
   * getStaminaGainRate()
   * getEnergyGainRate()
   * setFBParams()
   * copyMWValues (gmKeys)
   * sendMWValues(gmKeys)
   * customizeLayout()
   * refreshMWAPCSS()
   * showTimers()
   * resetTimers(popup)
   * doQuickClicks()
   * doParseMessages()
   * customizeMasthead()
   * customizeStats()
   * toggleHeal()
   * quickHeal(byUser)
   * quickBank(bankCity, amount)
   * customizeNames()
   * customizeHome()
   * getPlayerStats()
   * getPlayerEquip()
   * customizeProfile()
   * getJobMastery(jobRow, newJobs)
   * jobMastery(element, newJobs)
   * customizeVegasJobs()
   * customizeNewJobs
   * isJobFight (jobAction)
   * isJobLocked (jobAction)
   * requiresBizItem (jobRow)
   * customizeJobs()
   * updateJobInfo (jobMatch, cost, reward, ratio)
   * tierMastery(jobsFound, jobsMastered, currentTab) 
   * customizeFight()
   * customizeProps()
   * customizeHitlist()
   * setLevelUpRatio()
   * clickFightListAdd()
   * clickFightListRemove()
   * clickAutoHitListAdd()
   * clickAutoHitListRemove()
   * clickAutoHitListRemove()
   * clickWarListAdd()
   * clickWarListRemove()
   * getJobRow(jobName, contextNode)
   * getJobRowItems(jobName)
   * popJob()
   * jobCombo(element)
   * jobLoot(element)
   * debugDumpSettings()
   * parsePlayerUpdates(messagebox)
   * profileFix()
   * getActionBox(boxDesc)
   * getActionLink(boxDiv, linkText)
   * autoLotto()
   * autoWishlist()
   * autoWarAttack()
   * autoWar()
   * autoGiftWaiting()
   * autoGiftQueue()
   * autoGiftWindowClose()
   * autoGiftWindowOpen()
   * autoGiftAccept()
   * autoSafehouse()
   * autoDailyChecklist()
   * goProperties(propCity)
   * upgradeProps(propCity)
   * onHome()
   * onSafehouseNav()
   * onLottoNav()
   * onWarTab()
   * onPropertyNav()
   * onProfileNav()
   * onMyMafiaNav()
   * onFightTab()
   * onHitlistTab()
   * onLootTab()
   * onCollectionsTab()
   * loadHome()
   * goHome()
   * goSafehouseNav()
   * goProfileNav(player)
   * goMyProfile()
   * goMyMafiaNav()
   * goMyMafiaTab()
   * onMyMafiaTab()
   * goWarTab()
   * goBank()
   * goJobsNav()
   * goJobTab(tabno)
   * goJobTabPath(tabnopath)
   * getJobClicks()
   * goJob(jobno)
   * goFightNav()
   * goFightTab()
   * goHitlistTab()
   * goPropertyNav()
   * goDeleteNews()
   * goNY()
   * goCuba()
   * goMoscow()
   * goLocation(toCity)
   * prepStatsArray(workingArray, currentHour)
   * getStatSpecs(workingArray, includeZeroVals)
   * saveRecipientInfo()
   * takeFightStatistics(experience, winCount, lossCount, cashStr, resultType)
   * logFightResponse(rootElt, resultElt, context)
   * randomizeStamina()
   * createAjaxPage(autoplay, action, context)
   * handleJSONModified(e)
   * handleAjaxTimer()
   * logJSONResponse(responseText, action, context)
   * logResponse(rootElt, action, context)
   * closePopup(eltPopup, coolName)
   * handlePopups()
   * updateScript()
  * UTILITY METHODS
   * clearSettings()
   * getArrayDiffs(workingArray)
   * setSavedList(listName, list)
   * getSavedList(listName)
   * addSavedListItem(listName, item, max)
   * removeSavedListItem(listName, item)
   * removeJobForItem(jobList, itemName)
   * cycleSavedList(listName)
   * loadUrlWait (url)
   * loadUrl (url, funcStateChange)
   * attackXfromProfile()
   * eventclick_chuckaCrap()
   * getMWUrl (server, params)
   * getHitUrl (targetId)
   * getProfileUrl (userId)
   * stripURI(img)
   * showIfUnchecked(setting)
   * showIfSelected(setting)
   * showIfRelative(key)
   * linkToString(link, className)
   * decodeHTMLEntities(str)
   * hideElement(elt, hideFlag)
   * clickBurst (elt, clickCount)
   * clickElement(elt)
   * ignoreElement(element)
   * logElement(element, heading)
   * xpathFirst(p, c)
   * $x(p, c)
   * xpath(query, element)
   * toggleCheckElt(eltId)
   * saveCheckBoxElementArray(arrayEltIds)
   * saveCheckBoxElement(eltId)
   * isGMEqual (gmName, gmValue)
   * isGMChecked (gmName)
   * isGMUndefined (gmName)
   * isUndefined(value)
   * makeElement(type, appendto, attributes, checked, chkdefault)
   * destroyByID( id)
   * remakeElement(type, appendto, attributes, checked, chkdefault)
   * parseCash(cash)
   * parseCashLoc(cash)
   * makeCommaValue(nStr)
   * getGMTime(GMvalue)
   * setGMTime(GMvalue, countdownStr)
   * timeLeftGM(GMvalue)
   * timeLeft(timeToConvert)
   * getDecimalTime(decimalTime)
   * getHoursTime(timer)
   * decodeID (strID)
   * decode64(input)
   * encode64(input)

